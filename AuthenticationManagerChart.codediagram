{"id":-1,"name":"FROM_FILE","userId":-1,"createdAt":"","updatedAt":"","content":{"items":[{"uid":"-3Bd5JusAU","position":{"x":-2800,"y":-460},"sizes":{"width":399.796875,"height":1886.28125},"autoheight":true,"blockContent":{"content":[{"type":"filePathNode","attrs":{"pathToFile":"","version":1},"content":[{"type":"text","marks":[{"type":"bold"}],"text":"backend\\src\\main\\java\\com\\beaverbyte\\financial_tracker_application\\security\\WebSecurityConfig.java"}]},{"type":"codeBlock","attrs":{"language":"java","wrapCode":true},"content":[{"type":"text","text":"@Configuration \r\n@EnableMethodSecurity // AOP Security on methods\r\npublic class WebSecurityConfig { \r\n  // Spring Security needs User details to perform auth\r\n  @Autowired\r\n  UserDetailsServiceImpl userDetailsService;\r\n\r\n  // Handles unauthorized requests\r\n  @Autowired\r\n  private AuthEntryPointJwt unauthorizedHandler;\r\n\r\n  /**\r\n   * Factory method to create new {@link AuthTokenFilter}\r\n   */\r\n  @Bean\r\n  public AuthTokenFilter authenticationJwtTokenFilter() {\r\n    return new AuthTokenFilter();\r\n  }\r\n\r\n  /**\r\n   * An AuthenticationManager delegates to this with an authenticate() method.\r\n   * \r\n   * Validates user provided username (with {@link #userDetailsService}) and password against hashed password in database using set\r\n   * {@link #passwordEncoder}. Adds to SecurityContext upon success. \r\n   *  \r\n   */\r\n  @Bean\r\n  public DaoAuthenticationProvider authenticationProvider() {\r\n      DaoAuthenticationProvider authProvider = new DaoAuthenticationProvider();\r\n      \r\n      // Service used here to inject user Details when they're fired\r\n      authProvider.setUserDetailsService(userDetailsService);\r\n      // PasswordEncoder set, otherwise will be plain text\r\n      authProvider.setPasswordEncoder(passwordEncoder()); \r\n   \r\n      return authProvider;\r\n  }\r\n  \r\n  // Delegates to one or more AuthenticationProvider implementations for authentication\r\n  @Bean\r\n  public AuthenticationManager authenticationManager(AuthenticationConfiguration authConfig) throws Exception {\r\n    return authConfig.getAuthenticationManager();\r\n  }\r\n\r\n  @Bean\r\n  public PasswordEncoder passwordEncoder() {\r\n    return new BCryptPasswordEncoder();\r\n  }\r\n  \r\n  // Security that applies to HTTP requests\r\n  @Bean\r\n  public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {\r\n    http.csrf(csrf -> csrf.disable())\r\n        .exceptionHandling(exception -> exception.authenticationEntryPoint(unauthorizedHandler))\r\n        .sessionManagement(session -> session.sessionCreationPolicy(SessionCreationPolicy.STATELESS))\r\n        .authorizeHttpRequests(auth -> \r\n          auth.requestMatchers(\"/api/auth/**\").permitAll()\r\n              .requestMatchers(\"/api/test/**\").permitAll()\r\n              .anyRequest().authenticated()\r\n        );\r\n    \r\n    // http.authenticationProvider(authenticationProvider());\r\n\r\n    // Adding to filter before to ensure Jwt Filter for authenticating users\r\n    http.addFilterBefore(authenticationJwtTokenFilter(), UsernamePasswordAuthenticationFilter.class);\r\n    \r\n    return http.build();\r\n  }\r\n}"}]}]},"nodeType":"block"},{"uid":"s_IdUIUEYv","position":{"x":-4330,"y":460},"sizes":{"width":399.828125,"height":84.125},"autoheight":true,"blockContent":{"type":"doc","content":[{"type":"paragraph","content":[{"type":"text","text":"HTTP Request (WIth or Without JWT Token)"}]}]},"nodeType":"block"},{"uid":"5pJmqqQI0D","position":{"x":170,"y":1220},"sizes":{"width":519.84375,"height":346.578125},"autoheight":true,"blockContent":{"content":[{"type":"filePathNode","attrs":{"pathToFile":"","version":1},"content":[{"type":"text","marks":[{"type":"bold"}],"text":"backend\\src\\main\\java\\com\\beaverbyte\\financial_tracker_application\\security\\WebSecurityConfig.java"}]},{"type":"codeBlock","attrs":{"language":"java","wrapCode":true},"content":[{"type":"text","text":"@Bean\r\npublic DaoAuthenticationProvider authenticationProvider() {\r\n    DaoAuthenticationProvider authProvider = new DaoAuthenticationProvider();\r\n    \r\n    // Service used here to inject user Details when they're fired\r\n    authProvider.setUserDetailsService(userDetailsService);\r\n    // PasswordEncoder set, otherwise will be plain text\r\n    authProvider.setPasswordEncoder(passwordEncoder()); \r\n \r\n    return authProvider;\r\n}"}]}]},"nodeType":"block"},{"uid":"_DPa5eiaxU","position":{"x":-550,"y":1240},"sizes":{"width":399.84375,"height":259.09375},"autoheight":true,"blockContent":{"content":[{"type":"filePathNode","attrs":{"pathToFile":"","version":1},"content":[{"type":"text","marks":[{"type":"bold"}],"text":"backend\\src\\main\\java\\com\\beaverbyte\\financial_tracker_application\\security\\WebSecurityConfig.java"}]},{"type":"codeBlock","attrs":{"language":"java","wrapCode":true},"content":[{"type":"text","text":"@Bean\r\npublic AuthenticationManager authenticationManager(AuthenticationConfiguration authConfig) throws Exception {\r\n  return authConfig.getAuthenticationManager();\r\n}\r\n"}]}]},"nodeType":"block"},{"uid":"r-B-DxMLbQ","position":{"x":-2140,"y":-210},"sizes":{"width":399.84375,"height":1483.859375},"autoheight":true,"blockContent":{"content":[{"type":"filePathNode","attrs":{"pathToFile":"","version":1},"content":[{"type":"text","marks":[{"type":"bold"}],"text":"backend\\src\\main\\java\\com\\beaverbyte\\financial_tracker_application\\security\\jwt\\AuthTokenFilter.java"}]},{"type":"codeBlock","attrs":{"language":"java","wrapCode":true},"content":[{"type":"text","text":"public class AuthTokenFilter extends OncePerRequestFilter {\r\n  @Autowired\r\n  private JwtUtils jwtUtils;\r\n\r\n  @Autowired\r\n  private UserDetailsServiceImpl userDetailsService;\r\n\r\n  private static final Logger logger = LoggerFactory.getLogger(AuthTokenFilter.class);\r\n\r\n  @Override\r\n  protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)\r\n      throws ServletException, IOException {\r\n    try {\r\n    // Get JSON web Token from Auth header and remove 'Bearer' string, the Spring-Boot token prefix\r\n      String jwt = parseJwt(request);\r\n      if (jwt != null && jwtUtils.validateJwtToken(jwt)) {\r\n        String username = jwtUtils.getUserNameFromJwtToken(jwt);\r\n\r\n        // userDetails retrieved to create authentication object\r\n        UserDetails userDetails = userDetailsService.loadUserByUsername(username);\r\n        UsernamePasswordAuthenticationToken authentication =\r\n            new UsernamePasswordAuthenticationToken(\r\n                userDetails,\r\n                null,\r\n                userDetails.getAuthorities());\r\n        authentication.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));\r\n\r\n        // SecurityContext updates with User and Authentication related details\r\n        SecurityContextHolder.getContext().setAuthentication(authentication);\r\n      }\r\n    } catch (Exception e) {\r\n      logger.error(\"Cannot set user authentication: {}\", e);\r\n    }\r\n\r\n    filterChain.doFilter(request, response);\r\n  }\r\n\r\n  /**\r\n   *  Checks request's header for \"Authorization\" to extract out JWT token\r\n   * \r\n   * @return JWT token if present and validated, otherwise null\r\n   * */ \r\n  private String parseJwt(HttpServletRequest request) {\r\n    String headerAuth = request.getHeader(\"Authorization\");\r\n\r\n    if (StringUtils.hasText(headerAuth) && headerAuth.startsWith(\"Bearer \")) {\r\n      return headerAuth.substring(7);\r\n    }\r\n\r\n    return null;\r\n  }\r\n}"}]}]},"nodeType":"block"},{"uid":"il344sT9SA","position":{"x":1670,"y":250},"sizes":{"width":169.84375,"height":84.125},"autoheight":true,"blockContent":{"type":"doc","content":[{"type":"paragraph","content":[{"type":"text","text":"SecurityContext"}]}]},"nodeType":"block"},{"uid":"1eIERZbp1y","position":{"x":800,"y":180},"sizes":{"width":399.828125,"height":294.09375},"autoheight":true,"blockContent":{"content":[{"type":"filePathNode","attrs":{"pathToFile":"","version":1},"content":[{"type":"text","marks":[{"type":"bold"}],"text":"backend\\src\\main\\java\\com\\beaverbyte\\financial_tracker_application\\security\\jwt\\AuthTokenFilter.java"}]},{"type":"codeBlock","attrs":{"language":"java","wrapCode":true},"content":[{"type":"text","text":"UsernamePasswordAuthenticationToken authentication =\r\n    new UsernamePasswordAuthenticationToken(\r\n        userDetails,\r\n        null,\r\n        userDetails.getAuthorities());\r\nauthentication.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));"}]}]},"nodeType":"block"},{"uid":"kWn_QDV75g","position":{"x":-3540,"y":-170},"sizes":{"width":509.875,"height":766.5},"autoheight":true,"blockContent":{"type":"doc","content":[{"type":"filePathNode","attrs":{"pathToFile":"","version":1},"content":[{"type":"text","marks":[{"type":"bold"}],"text":"backend\\src\\main\\java\\com\\beaverbyte\\financial_tracker_application\\rest\\AuthController.java"}]},{"type":"codeBlock","attrs":{"language":"java","wrapCode":true},"content":[{"type":"text","text":"@CrossOrigin(origins = \"*\", maxAge = 3600)\r\n@RestController\r\n@RequestMapping(\"/api/auth\")\r\npublic class AuthController {\n\n...Autowired beans here\n\n  @PostMapping(\"/signin\")\r\n  public ResponseEntity<?> authenticateUser(@Valid @RequestBody LoginRequest loginRequest) {\r\n\r\n    Authentication authentication = authenticationManager.authenticate(\r\n        new UsernamePasswordAuthenticationToken(loginRequest.getUsername(), loginRequest.getPassword()));\r\n\r\n    SecurityContextHolder.getContext().setAuthentication(authentication);\r\n\r\n    String jwt = jwtUtils.generateJwtToken(authentication);\r\n    \r\n    // User returned back\r\n    UserDetailsImpl userDetails = (UserDetailsImpl) authentication.getPrincipal();    \r\n    List<String> roles = userDetails.getAuthorities().stream()\r\n        .map(item -> item.getAuthority())\r\n        .collect(Collectors.toList());\r\n\r\n    return ResponseEntity.ok(new JwtResponse(jwt, \r\n                         userDetails.getId(), \r\n                         userDetails.getUsername(), \r\n                         userDetails.getEmail(), \r\n                         roles));\r\n  }"}]}]},"nodeType":"block"},{"uid":"n0FnwgdfeL","position":{"x":-860,"y":820},"sizes":{"width":199.859375,"height":105.125},"autoheight":true,"blockContent":{"type":"doc","content":[{"type":"paragraph","content":[{"type":"text","text":"Next Filter OR End of FilterChain"}]}]},"nodeType":"block"},{"uid":"7id1WOezEw","position":{"x":2300,"y":210},"sizes":{"width":399.921875,"height":217.109375},"autoheight":true,"blockContent":{"type":"doc","content":[{"type":"codeBlock","attrs":{"language":"java","wrapCode":false},"content":[{"type":"text","text":"UserDetails userDetails =\n\t(UserDetails) SecurityContextHolder.getContext().getAuthentication().getPrincipal();\n\n// userDetails.getUsername()\n// userDetails.getPassword()\n// userDetails.getAuthorities()"}]}]},"nodeType":"block"},{"uid":"DiO5uX5Ogw","position":{"x":1230,"y":1210},"sizes":{"width":399.96875,"height":906.46875},"autoheight":true,"blockContent":{"content":[{"type":"filePathNode","attrs":{"pathToFile":"","version":1},"content":[{"type":"text","marks":[{"type":"bold"}],"text":"backend\\src\\main\\java\\com\\beaverbyte\\financial_tracker_application\\security\\jwt\\AuthEntryPointJwt.java"}]},{"type":"codeBlock","attrs":{"language":"java","wrapCode":true},"content":[{"type":"text","text":"@Component\r\npublic class AuthEntryPointJwt implements AuthenticationEntryPoint {\r\n\r\n  private static final Logger logger = LoggerFactory.getLogger(AuthEntryPointJwt.class);\r\n\r\n  @Override\r\n  public void commence(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException)\r\n      throws IOException, ServletException {\r\n    logger.error(\"Unauthorized error: {}\", authException.getMessage());\r\n  \r\n    response.setContentType(MediaType.APPLICATION_JSON_VALUE);\r\n    response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);\r\n  \r\n    // Provide more details for end user on why error occurred\r\n    final Map<String, Object> body = new HashMap<>();\r\n    body.put(\"status\", HttpServletResponse.SC_UNAUTHORIZED);\r\n    //Custom error message for user\r\n    body.put(\"error\", \"Unauthorized, please login\");\r\n    body.put(\"message\", authException.getMessage());\r\n    body.put(\"path\", request.getServletPath());\r\n  \r\n    // ObjectMapper serializes body object into JSON to write into the HTTP response's output stream\r\n    final ObjectMapper mapper = new ObjectMapper();\r\n    mapper.writeValue(response.getOutputStream(), body);\r\n  }\r\n}"}]}]},"nodeType":"block"}],"configs":{"centerX":115.60009861989693,"centerY":167.60268031383617,"zoomLevel":0.40429032038780927},"arrowData":{"arrowsMap":{},"pointsMap":{},"edgesMap":{"edge-_DPa5eiaxU-_DPa5eiaxU-right-5pJmqqQI0D-5pJmqqQI0D-left":{"uid":"edge-_DPa5eiaxU-_DPa5eiaxU-right-5pJmqqQI0D-5pJmqqQI0D-left","fromNodeId":"_DPa5eiaxU","fromHandleId":"_DPa5eiaxU-right","toNodeId":"5pJmqqQI0D","toHandleId":"5pJmqqQI0D-left","direction":"ft","selectable":true,"type":"solid","content":{"label":"delegates authentication to any existing providers"}},"edge--3Bd5JusAU--3Bd5JusAU-right-r-B-DxMLbQ-r-B-DxMLbQ-left":{"uid":"edge--3Bd5JusAU--3Bd5JusAU-right-r-B-DxMLbQ-r-B-DxMLbQ-left","fromNodeId":"-3Bd5JusAU","fromHandleId":"-3Bd5JusAU-right","toNodeId":"r-B-DxMLbQ","toHandleId":"r-B-DxMLbQ-left","direction":"ft","selectable":true,"type":"solid","content":{"label":"validated for JWT"}},"edge-r-B-DxMLbQ-r-B-DxMLbQ-right-1eIERZbp1y-1eIERZbp1y-left":{"uid":"edge-r-B-DxMLbQ-r-B-DxMLbQ-right-1eIERZbp1y-1eIERZbp1y-left","fromNodeId":"r-B-DxMLbQ","fromHandleId":"r-B-DxMLbQ-right","toNodeId":"1eIERZbp1y","toHandleId":"1eIERZbp1y-left","direction":"ft","selectable":true,"type":"solid","content":{"label":"HAS JWT: builds authentication object"}},"edge-1eIERZbp1y-1eIERZbp1y-right-il344sT9SA-il344sT9SA-left":{"uid":"edge-1eIERZbp1y-1eIERZbp1y-right-il344sT9SA-il344sT9SA-left","fromNodeId":"1eIERZbp1y","fromHandleId":"1eIERZbp1y-right","toNodeId":"il344sT9SA","toHandleId":"il344sT9SA-left","direction":"ft","selectable":true,"type":"solid","content":{"label":"added to"}},"edge-s_IdUIUEYv-s_IdUIUEYv-right-kWn_QDV75g-kWn_QDV75g-left":{"uid":"edge-s_IdUIUEYv-s_IdUIUEYv-right-kWn_QDV75g-kWn_QDV75g-left","fromNodeId":"s_IdUIUEYv","fromHandleId":"s_IdUIUEYv-right","toNodeId":"kWn_QDV75g","toHandleId":"kWn_QDV75g-left","direction":"ft","selectable":true,"type":"solid","content":{"label":"/signin"}},"edge-kWn_QDV75g-kWn_QDV75g-right--3Bd5JusAU--3Bd5JusAU-left":{"uid":"edge-kWn_QDV75g-kWn_QDV75g-right--3Bd5JusAU--3Bd5JusAU-left","fromNodeId":"kWn_QDV75g","fromHandleId":"kWn_QDV75g-right","toNodeId":"-3Bd5JusAU","toHandleId":"-3Bd5JusAU-left","direction":"ft","selectable":true,"type":"solid","content":{"label":"http request is filtered by"}},"edge-r-B-DxMLbQ-r-B-DxMLbQ-right-n0FnwgdfeL-n0FnwgdfeL-left":{"uid":"edge-r-B-DxMLbQ-r-B-DxMLbQ-right-n0FnwgdfeL-n0FnwgdfeL-left","fromNodeId":"r-B-DxMLbQ","fromHandleId":"r-B-DxMLbQ-right","toNodeId":"n0FnwgdfeL","toHandleId":"n0FnwgdfeL-left","direction":"ft","selectable":true,"type":"solid","content":{"label":"NO JWT/EXPIRED"}},"edge-n0FnwgdfeL-n0FnwgdfeL-bottom-_DPa5eiaxU-_DPa5eiaxU-left":{"uid":"edge-n0FnwgdfeL-n0FnwgdfeL-bottom-_DPa5eiaxU-_DPa5eiaxU-left","fromNodeId":"n0FnwgdfeL","fromHandleId":"n0FnwgdfeL-bottom","toNodeId":"_DPa5eiaxU","toHandleId":"_DPa5eiaxU-left","direction":"ft","selectable":true,"type":"solid","content":{"label":"authenticate in Controller invokes"}},"edge-il344sT9SA-il344sT9SA-right-7id1WOezEw-7id1WOezEw-left":{"uid":"edge-il344sT9SA-il344sT9SA-right-7id1WOezEw-7id1WOezEw-left","fromNodeId":"il344sT9SA","fromHandleId":"il344sT9SA-right","toNodeId":"7id1WOezEw","toHandleId":"7id1WOezEw-left","direction":"ft","selectable":true,"type":"solid","content":{"label":"now can provide principal/userDetails like"}},"edge-5pJmqqQI0D-5pJmqqQI0D-right-1eIERZbp1y-1eIERZbp1y-bottom":{"uid":"edge-5pJmqqQI0D-5pJmqqQI0D-right-1eIERZbp1y-1eIERZbp1y-bottom","fromNodeId":"5pJmqqQI0D","fromHandleId":"5pJmqqQI0D-right","toNodeId":"1eIERZbp1y","toHandleId":"1eIERZbp1y-bottom","direction":"ft","selectable":true,"type":"solid","content":{"label":"SUCCESS: builds authentication object"}},"edge-5pJmqqQI0D-5pJmqqQI0D-right-DiO5uX5Ogw-DiO5uX5Ogw-left":{"uid":"edge-5pJmqqQI0D-5pJmqqQI0D-right-DiO5uX5Ogw-DiO5uX5Ogw-left","fromNodeId":"5pJmqqQI0D","fromHandleId":"5pJmqqQI0D-right","toNodeId":"DiO5uX5Ogw","toHandleId":"DiO5uX5Ogw-left","direction":"ft","selectable":true,"type":"solid","content":{"label":"FAILURE: "}}}}}}