create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
create sequence refreshtoken_seq start with 1 increment by 50;
create table accounts (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table categories (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table merchants (id bigint generated by default as identity, name varchar(255) not null unique, primary key (id));
create table refreshtoken (expiry_date timestamp(6) with time zone not null, id bigint not null, user_id bigint unique, token varchar(255) not null unique, primary key (id));
create table roles (id integer generated by default as identity, name varchar(20) check (name in ('ROLE_USER','ROLE_MODERATOR','ROLE_ADMIN')), primary key (id));
create table transactions (amount numeric(19,4), date date, account_id bigint, category_id bigint, id bigint generated by default as identity, merchant_id bigint, note varchar(255), primary key (id));
create table user_roles (role_id integer not null, user_id bigint not null, primary key (role_id, user_id));
create table users (id bigint generated by default as identity, username varchar(20) not null, email varchar(50) not null, password varchar(120) not null, primary key (id), unique (username), unique (email));
alter table if exists refreshtoken add constraint FKa652xrdji49m4isx38pp4p80p foreign key (user_id) references users;
alter table if exists transactions add constraint FK20w7wsg13u9srbq3bd7chfxdh foreign key (account_id) references accounts;
alter table if exists transactions add constraint FKsqqi7sneo04kast0o138h19mv foreign key (category_id) references categories;
alter table if exists transactions add constraint FKosju61fahf0o80fnd5p59jch5 foreign key (merchant_id) references merchants;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
